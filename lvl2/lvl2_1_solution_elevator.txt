# LEVEL 2, Task 1


from functools import cmp_to_key


def solution(l):
  # 2darray
  version_numbers = [[int(nr) for nr in version.split('.')] for version in l]
  version_numbers = [augment(item) for item in version_numbers]
  # sort
  version_numbers_sorted = sorted(version_numbers, key=cmp_to_key(compare))

  # concatenate
  result = [[str(item) for item in version if item != -1] for version in version_numbers_sorted]
  result = ['.'.join(item) for item in result]

  return result


def compare(item1, item2):
  # compare major
  major = item1[0] - item2[0]

  if major == 0:
    # compare minor
    minor = item1[1] - item2[1]

    if minor == 0:
      # compare revision
      revision = item1[2] - item2[2]
      return revision

    return item1[1] - item2[1]

  return item1[0] - item2[0]


def augment(item):
  length = len(item)
  if length > 2:
    return item
  item.append(-1)
  if(length > 1):
    return item
  item.append(-1)
  return item